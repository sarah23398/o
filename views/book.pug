html
  head
    title #{book.title} · Nook
    link(rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css' integrity='sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO' crossorigin='anonymous')
    script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js' integrity='sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo' crossorigin='anonymous')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js' integrity='sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49' crossorigin='anonymous')
    script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js' integrity='sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy' crossorigin='anonymous')
    script(type="module" src='/javascripts/bookClient.js')
    link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel="icon" type="image/png" href="https://static.vecteezy.com/system/resources/previews/002/268/088/original/man-reading-a-book-and-sitting-on-stack-of-books-illustration-free-vector.jpg")

body
  include ./partials/header.pug

  p
  .container
    .row
      .col-sm
        - ed = "th"
        - mod100 = book.edition % 100
        - mod10 = book.edition % 10
        if mod10 == 1 && mod100 != 11
          - ed = "st"
        else if mod10 == 2 && mod100 %100 != 12
          - ed = "nd"
        else if mod10 == 3 && mod100 % 100 != 13
          - ed = "rd"

        - genres = ""
        - index = 0
        each genre in book.genres
          if index == book.genres.length - 1
            - genres += genre.name + " "
          else
            - genres += genre.name + ", "
          - index++

        br
        h3 #{book.title}
        p
        h5 Book Information
        p
          span.font-weight-bold ISBN:
          span &#32;
          span#isbn #{book.isbn}
        p
          span.font-weight-bold Genre:
          span &#32;
          | #{genres}
        p
          span.font-weight-bold Description:
          span &#32;
          | #{book.description}
        p
          span.font-weight-bold Price:
          span &#32;
          | $#{book.price}
        p
          span.font-weight-bold Number of pages:
          span &#32;
          | #{book.print_length}
        p
          span.font-weight-bold Edition:
          span &#32;
          | #{book.edition}#{ed}
        p
          span.font-weight-bold Publisher:
          span &#32;
          | #{book.publisher}
        p
          span.font-weight-bold Publish date:
          span &#32;
          | #{book.publish_date.toLocaleDateString()}
        br
        h5 Author(s) Information
        p
        each author in book.authors
          h6 #{author.name}
          ul
            li
              span.font-weight-bold Contact:
              |  #{author.email}
            li
              span.font-weight-bold Bio:
              |  #{author.bio}
            li
              span.font-weight-bold Website:
              span &#32;
              a(href="https://www.youtube.com/watch?v=dQw4w9WgXcQ", target="_blank", rel="noopener noreferrer") #{author.website}
        br

  if session.loggedInType == 'customer'
    .container
      hr(style='border: 1px solid grey;')
      br
      .row
        .col-sm
          if book.stock > 0
            h5 Order
            label(for='quantity')= 'Quantity = '
            span &#32;
            span &#32;
            input#quantity(type='number' name='quantity' min='1' max=book.stock value=(session.cart && session.cart[book.isbn])?session.cart[book.isbn]:1)
            p
            button#addToCart.btn.btn-success Add to cart
            if session.cart && session.cart[book.isbn]
              span.text-success  You have #{session.cart[book.isbn]} of these in your cart
          else
            p OUT OF STOCK
        .col-sm
          h5 Add a Rating
          label(for='rating')= 'Rating = '
          span &#32;
          span &#32;
          input#rating(type='number' name='rating' min='1' max='5' required)
          p
          button#addRating.btn.btn-primary Add rating

        .col-sm
          h5 Add a Review
          label(for='rating')= 'Rating = '
          span &#32;
          span &#32;
          input#rating(type='number' name='rating' min='1' max='5' required)
          br
          label(for='review')= 'Review: '
          br
          textarea#review(maxlength='255' cols='50' rows='3')
          p
          button#addRating.btn.btn-primary Add review
          br
          br
          br
      hr(style='border: 1px solid grey;')
  //- also add if there are ratings
  if session.loggedInType == 'customer'
    .container
      .row
        .col
          br
          h4 Ratings &amp; Reviews
      .row
        .col.col-12.text-center.mb-5
          .card
            .row
              .col
                .rating-box(style="margin-top:20px;")
                  h1.pt-4 #{book.avgRating}
                  p out of 5
                div
                  span.fa.fa-star.star-active.mx-1
                  span.fa.fa-star.star-active.mx-1
                  span.fa.fa-star.star-active.mx-1
                  span.fa.fa-star.star-active.mx-1
                  span.fa.fa-star.star-inactive.mx-1
              .col-md-8
                .rating-bar0.justify-content-center
                  table.text-left.mx-auto
                    tr
                      td.rating-label ☆☆☆☆☆
                      td.rating-bar
                        .bar-container
                          .bar-5
                      td.text-right #{book.ratingCounts[4]}
                    tr
                      td.rating-label ☆☆☆☆
                      td.rating-bar
                        .bar-container
                          .bar-4
                      td.text-right #{book.ratingCounts[3]}
                    tr
                      td.rating-label ☆☆☆
                      td.rating-bar
                        .bar-container
                          .bar-3
                      td.text-right #{book.ratingCounts[2]}
                    tr
                      td.rating-label ☆☆
                      td.rating-bar
                        .bar-container
                          .bar-2
                      td.text-right #{book.ratingCounts[1]}
                    tr
                      td.rating-label ☆
                      td.rating-bar
                        .bar-container
                          .bar-1
                      td.text-right #{book.ratingCounts[0]}
        .col
          each rating in book.ratings
            .card(style="margin-top: -17px;")
              .row.d-flex
                .d-flex.flex-column
                  h5.mt-2.mb-0 #{rating.customer}
                  p.text-left
                    span.text-muted #{rating.rating}
                    span.fa.fa-star.star-active.ml-3
                    span.fa.fa-star.star-active
                    span.fa.fa-star.star-active
                    span.fa.fa-star.star-active
                    span.fa.fa-star.star-inactive
                .ml-auto
                  p.text-muted.pt-5.pt-sm-3 #{rating.review_date}
              .row.text-left
                p.content #{rating.review}
          br
          br
  //- else if ratings are empty
  else
    .container
      .row
        .col
          h4 Remove from database
          button#removeBook.btn.btn-danger Remove
          br
          br
          br
          br